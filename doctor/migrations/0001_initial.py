# Generated by Django 4.2.4 on 2023-10-23 06:20

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Doctors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("specialization", models.CharField(max_length=50)),
                (
                    "medical_license",
                    models.FileField(
                        blank=True, null=True, upload_to="doctor/medical_license"
                    ),
                ),
                ("education", models.CharField(max_length=50)),
                ("clinic_name", models.CharField(max_length=50)),
                ("clinic_address", models.TextField()),
                (
                    "clinic_contact_no",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        max_length=20,
                    ),
                ),
                ("summary", models.TextField(blank=True, null=True)),
                ("appointment_charges", models.FloatField(blank=True, null=True)),
                ("salary", models.FloatField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "doctors",
            },
        ),
        migrations.CreateModel(
            name="NotePad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("room_name", models.CharField(max_length=50)),
                ("notepad", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Patients",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "patient_id",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                ("phone", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=254)),
                ("dob", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=20
                    ),
                ),
                ("pre_health_issue", models.BooleanField()),
                ("pre_health_issue_text", models.TextField(blank=True, null=True)),
                ("treatment_undergoing", models.BooleanField()),
                ("treatment_undergoing_text", models.TextField(blank=True, null=True)),
                ("treatment_allergies", models.BooleanField()),
                ("treatment_allergies_text", models.TextField(blank=True, null=True)),
                ("additional_note", models.TextField(blank=True, null=True)),
                ("paid_amount", models.FloatField()),
                ("pay_mode", models.CharField(max_length=20)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.TimeField()),
            ],
            options={
                "db_table": "time_slot",
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.CharField(
                        editable=False, max_length=20, primary_key=True, serialize=False
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=50, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Prescriptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("right_sphere", models.FloatField()),
                ("right_cylinder", models.FloatField(default=0.0)),
                ("right_axis", models.PositiveIntegerField(default=0)),
                ("right_od", models.FloatField(null=True)),
                ("right_pd", models.FloatField(default=31.5)),
                ("left_sphere", models.FloatField()),
                ("left_cylinder", models.FloatField(default=0.0)),
                ("left_axis", models.PositiveIntegerField(default=0)),
                ("left_od", models.FloatField(null=True)),
                ("left_pd", models.FloatField(default=31.5)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="doctor.patients",
                    ),
                ),
            ],
            options={
                "db_table": "prescriptions",
            },
        ),
        migrations.AddField(
            model_name="patients",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="doctor.users"
            ),
        ),
        migrations.CreateModel(
            name="Feedbacks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review", models.TextField(blank=True, null=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctor.doctors"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="doctor.patients",
                    ),
                ),
            ],
            options={
                "db_table": "feedbacks",
            },
        ),
        migrations.CreateModel(
            name="DoctorLeave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("leave_date", models.DateField()),
                ("is_sanction", models.BooleanField(default=False)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctor.doctors"
                    ),
                ),
            ],
            options={
                "db_table": "doctor_leave",
            },
        ),
        migrations.CreateModel(
            name="DoctorExperience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("hospital_name", models.CharField(max_length=255)),
                ("position", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctor.doctors"
                    ),
                ),
            ],
            options={
                "db_table": "doctor_experience",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="DoctorAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("start_working_hr", models.TimeField()),
                ("end_working_hr", models.TimeField()),
                (
                    "working_days",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), size=None
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_availability",
                        to="doctor.doctors",
                    ),
                ),
            ],
            options={
                "db_table": "doctor_availability",
            },
        ),
        migrations.CreateModel(
            name="Consultation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("consult", models.TextField()),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctor.doctors"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="doctor.patients",
                    ),
                ),
                (
                    "prescription",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="doctor.prescriptions",
                    ),
                ),
            ],
            options={
                "db_table": "consultations",
            },
        ),
        migrations.CreateModel(
            name="Appointments",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "appointment_id",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("schedule_date", models.DateTimeField()),
                ("slot_key", models.CharField(max_length=5)),
                ("room_name", models.CharField(max_length=50)),
                ("no_cost_consult", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("rescheduled", "Rescheduled"),
                            ("free consult", "Free Consult"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("meeting_link", models.URLField()),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctor.doctors"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="doctor.patients",
                    ),
                ),
            ],
            options={
                "db_table": "appointments",
            },
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("date", models.DateField()),
                ("is_booked", models.BooleanField(default=False)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctor.doctors"
                    ),
                ),
                (
                    "time_slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="doctor.timeslot",
                    ),
                ),
            ],
            options={
                "db_table": "availability",
                "unique_together": {("doctor", "date", "time_slot")},
            },
        ),
    ]
